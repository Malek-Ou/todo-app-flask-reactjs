name: Build and Push Multi-Container App

on:
  push:
    branches:
      - dev

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Frontend tests
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install frontend deps
        run: cd frontend && npm install
      - name: Run frontend tests
        run: cd frontend && npm test

      # Backend tests
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install backend deps
        run: cd backend && pip install -r requirements.txt
      - name: Run backend tests
        run: cd backend && pytest

  build-and-push:
    needs: test #needs: test dans build-and-push : le build ne commence que si les tests r√©ussissent
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v3
        with:
          context: ./frontend
          push: true
          tags: malekouaer/frontend:latest

      - name: Build and push backend image
        uses: docker/build-push-action@v3
        with:
          context: ./backend
          push: true
          tags: malekouaer/backend:latest

# Comment out deploy job like this:

# deploy:
#   needs: build-and-push
#   if: success()
#   runs-on: ubuntu-latest
#   steps:
#     - name: Deploy on VPS
#       uses: appleboy/ssh-action@v1.0.3
#       with:
#         host: ${{ secrets.VPS_HOST }}
#         username: ${{ secrets.VPS_USER }}
#         key: ${{ secrets.VPS_PRIVATE_KEY }}
#         script: |
#           cd ${{ secrets.VPS_PATH }}
#           docker-compose pull frontend
#           docker-compose pull backend
#           docker-compose up -d --remove-orphans


# Optionnel : supprime la section nginx build si tu utilises l'image officielle nginx
# - name: Build and push nginx image
#   uses: docker/build-push-action@v3
#   with:
#     context: ./nginx
#     push: true
#     tags: malekouaer/nginx:latest
